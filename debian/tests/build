#!/bin/sh
# autopkgtest check: Build and run a program against libcaca, to verify that
# the headers and pkg-config file are installed correctly
# (C) 2013 Canonical Ltd.
# Author: Vibhav Pant <vibhavp@ubuntu.com>

set -e

if [ -n "${DEB_HOST_GNU_TYPE:-}" ]; then
    CROSS_COMPILE="$DEB_HOST_GNU_TYPE-"
else
    CROSS_COMPILE=
fi

export TERM=linux

WORKDIR=$(mktemp -d)
trap "rm -rf $WORKDIR" 0 INT QUIT ABRT PIPE TERM
cd $WORKDIR
cat <<EOF > caca_test.c
#include <caca.h>
#include <stdio.h>
#include <assert.h>

int main(void)
{
	caca_canvas_t *c;
	printf("Testing libcaca version %s\n", caca_get_version());

	c = caca_create_canvas(20,30);
	assert(c != NULL);

	assert(caca_free_canvas(c) != -1);

	return 0;
}
EOF

${CROSS_COMPILE}gcc -o caca_test caca_test.c `${CROSS_COMPILE}pkg-config --cflags --libs caca` -Wall
echo "build: OK"
[ -x caca_test ]
./caca_test
echo "run: OK"

${CROSS_COMPILE}gcc -o caca_test_legacy caca_test.c `caca-config --cflags --libs` -Wall -Werror
echo "build (legacy caca-config script): OK"
[ -x caca_test_legacy ]
./caca_test_legacy
echo "run: OK"

cat <<EOF > caca_test.cpp
#include <caca++.h>
#include <iostream>

int main(void)
{
	std::cout << "Testing libcaca version " << Caca::getVersion() << std::endl;

	Canvas c;
	c.Clear();

	return 0;
}
EOF

${CROSS_COMPILE}g++ -o caca_test_cpp caca_test.cpp `${CROSS_COMPILE}pkg-config --cflags --libs caca++` -Wall
echo "build C++: OK"
[ -x caca_test_cpp ]
./caca_test_cpp
echo "run C++: OK"
